name: Wait for e2e test status

on:
    workflow_call:
        inputs:
            environment:
                type: string
            wait-timeout:
                type: number
                default: 15
            test-type:
                type: string
                default: cypress

jobs:
    wait-for-e2e-test-status:
        runs-on: ubuntu-latest

        permissions:
            id-token: write # This is required for requesting the JWT
            contents: read # This is required for actions/checkout

        steps:
            - name: Login as OIDC for metrics account
              uses: aws-actions/configure-aws-credentials@v1.7.0
              with:
                  role-to-assume: arn:aws:iam::404548253908:role/monitoring-githubactionsrole74C434B1-zIAFzeH9CXA5
                  role-session-name: GitHub_to_AWS_via_Federated_Metrics_OIDC
                  aws-region: eu-central-1

            - name: Invoke the lambda and wait until it does not return pending
              timeout-minutes: ${{ inputs.wait-timeout }}
              run: |
                  until [[ $(aws lambda invoke --function-name cdkmetrics --cli-binary-format raw-in-base64-out --payload '{"type": "test_status", "sha": "${{ github.sha }}", "test_type": "${{ inputs.test-type }}"${{ inputs.environment && format(', "environment": "{0}"', inputs.environment) || '' }}}' /dev/stdout 2>/dev/null --no-cli-pager | jq -r '.status | select( . != null )') != "pending" ]]; do
                    echo "Waiting for ${{ inputs.test-type }} tests results for ${{ github.sha }}..."
                    sleep 5
                  done

            - name: Check the status of the ${{ inputs.test-type }} tests and fail the workflow if tests failed
              run: |
                  status=$(aws lambda invoke --function-name cdkmetrics --cli-binary-format raw-in-base64-out --payload '{"type": "test_status", "sha": "${{ github.sha }}", "test_type": "${{ inputs.test-type }}"${{ inputs.environment && format(', "environment": "{0}"', inputs.environment) || '' }}}' /dev/stdout 2>/dev/null --no-cli-pager | jq -r '.status | select( . != null )')
                  echo "The status of the ${{ inputs.test-type }} tests is $status"

                  # post the link to the test run to the summary
                  last_run_id=$(aws lambda invoke --function-name cdkmetrics --cli-binary-format raw-in-base64-out --payload '{"type": "get_last_test_run_id", "sha": "${{ github.sha }}"}' /dev/stdout 2>/dev/null --no-cli-pager | jq -r '.last_run_id | select( . != null )')
                  echo "[E2E test run](https://github.com/doctariDev/planerio-e2e-tests/actions/runs/$last_run_id)" >> $GITHUB_STEP_SUMMARY

                  if [[ $status == "failed" ]]; then
                    exit 1
                  fi

            - name: Continue with the workflow
              run: echo "The ${{ inputs.test-type }} tests passed"
